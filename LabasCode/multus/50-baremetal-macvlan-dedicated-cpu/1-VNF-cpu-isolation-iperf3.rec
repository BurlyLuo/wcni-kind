# host version [22.04.3] https://fridge.ubuntu.com/2023/08/11/ubuntu-22-04-3-lts-released/
# dock version [23.0.1 ] https://download.docker.com/linux/ubuntu/dists/focal/pool/stable/amd64/

# clab version [v0.59.0] https://github.com/srl-labs/containerlab/releases/download/v0.59.0/containerlab_0.59.0_linux_amd64.tar.gz
# vyos version [v1.4.9 ] docker pull burlyluo/vyos:1.4.9

# kind version [v0.20.0] https://github.com/kubernetes-sigs/kind/releases/download/v0.20.0/kind-linux-amd64
# imge version [v1.27.3] docker pull burlyluo/kindest:v1.27.3

# phub version [v2.7.1 ] docker pull docker.io/registry:2  
  # run p_hub: [docker run -d --network=host --restart=always --name phub registry:2]

# nettool imge [v1.1.11] docker pull burlyluo/nettool:latest
# iptables fwd [iptables -L | grep policy || and then: systemctl cat docker >> ExecStartPost=/sbin/iptables -P FORWARD ACCEPT]

# Auther name: [Wei Luo]
# Mail address [olaf.luo@foxmail.com]
# Docs address [https://www.yuque.com/wei.luo]
# Bootcamp url [https://youdianzhishi.com/web/course/1041]
# Issue report [https://github.com/BurlyLuo/wcni-kind/issues or https://gitee.com/rowan-wcni/wcni-kind/issues]


# https://doc.dpdk.org/guides/linux_gsg/enable_func.html
10.3. Using Linux Core Isolation to Reduce Context Switches
While the threads used by a DPDK application are pinned to logical cores on the system, it is possible for the Linux scheduler to run other tasks on those cores. To help prevent additional workloads, timers, RCU processing and IRQs from running on those cores, it is possible to use the Linux kernel parameters isolcpus, nohz_full, irqaffinity to isolate them from the general Linux scheduler tasks.

For example, if a given CPU has 0-7 cores and DPDK applications are to run on logical cores 2, 4 and 6, the following should be added to the kernel parameter list:

isolcpus=2,4,6 nohz_full=2,4,6 irqaffinity=0,1,3,5,7


# taskset -cp 1 
pid 1's current affinity list: 0-3,52-55
# iperf3 -s -B 10.2.149.101
# for i in {1..50};do iperf3 -c 10.2.149.101 -u -b 10G;done
Connecting to host 10.2.149.101, port 5201
[  4] local 10.2.149.90 port 32420 connected to 10.2.149.101 port 5201
[ ID] Interval           Transfer     Bandwidth       Total Datagrams
[  4]   0.00-1.00   sec   123 MBytes  1.03 Gbits/sec  89094  
[  4]   1.00-2.00   sec   111 MBytes   935 Mbits/sec  80724  
[  4]   2.00-3.00   sec   105 MBytes   879 Mbits/sec  75843  
[  4]   3.00-4.00   sec   124 MBytes  1.04 Gbits/sec  89689  
[  4]   4.00-5.00   sec   110 MBytes   919 Mbits/sec  79364  
[  4]   5.00-6.00   sec   130 MBytes  1.09 Gbits/sec  94315  
[  4]   6.00-7.00   sec   115 MBytes   966 Mbits/sec  83364  
[  4]   7.00-8.00   sec   111 MBytes   931 Mbits/sec  80392  
[  4]   8.00-9.00   sec   112 MBytes   940 Mbits/sec  81103  
[  4]   9.00-10.00  sec   110 MBytes   924 Mbits/sec  79738  
- - - - - - - - - - - - - - - - - - - - - - - - -
[ ID] Interval           Transfer     Bandwidth       Jitter    Lost/Total Datagrams
[  4]   0.00-10.00  sec  1.12 GBytes   966 Mbits/sec  0.003 ms  0/833626 (0%)  
[  4] Sent 833626 datagrams

