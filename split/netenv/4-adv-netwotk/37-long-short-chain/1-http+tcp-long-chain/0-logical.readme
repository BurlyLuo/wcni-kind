lo clab-http-tcp-long-chain-gw1 bash 
add below iptables based on topo:
server1 ---[eth1]gw1[eth2] --- server2 

iptables -A FORWARD -s 10.1.5.10 -d 10.1.8.10 -p tcp --tcp-flags FIN,ACK FIN,ACK -j DROP

当我们在eth1 和 eth2 上抓包的时候，会有不同的现象，这也是expect的。
eth1: 我们会看到FIN ACK的重传：
12:14:09.717621 aa:c1:ab:63:ba:68 > aa:c1:ab:38:c6:60, ethertype IPv4 (0x0800), length 66: 10.1.5.10.48298 > 10.1.8.10.http: Flags [.], ack 283, win 443, options [nop,nop,TS val 4216480485 ecr 3946693475], length 0
12:14:09.717755 aa:c1:ab:63:ba:68 > aa:c1:ab:38:c6:60, ethertype IPv4 (0x0800), length 66: 10.1.5.10.48298 > 10.1.8.10.http: Flags [F.], seq 74, ack 283, win 443, options [nop,nop,TS val 4216480486 ecr 3946693475], length 0
12:14:09.926294 aa:c1:ab:63:ba:68 > aa:c1:ab:38:c6:60, ethertype IPv4 (0x0800), length 66: 10.1.5.10.48298 > 10.1.8.10.http: Flags [F.], seq 74, ack 283, win 443, options [nop,nop,TS val 4216480694 ecr 3946693475], length 0
12:14:10.134645 aa:c1:ab:63:ba:68 > aa:c1:ab:38:c6:60, ethertype IPv4 (0x0800), length 66: 10.1.5.10.48298 > 10.1.8.10.http: Flags [F.], seq 74, ack 283, win 443, options [nop,nop,TS val 4216480902 ecr 3946693475], length 0
12:14:10.557880 aa:c1:ab:63:ba:68 > aa:c1:ab:38:c6:60, ethertype IPv4 (0x0800), length 66: 10.1.5.10.48298 > 10.1.8.10.http: Flags [F.], seq 74, ack 283, win 443, options [nop,nop,TS val 4216481326 ecr 3946693475], length 0
12:14:11.385928 aa:c1:ab:63:ba:68 > aa:c1:ab:38:c6:60, ethertype IPv4 (0x0800), length 66: 10.1.5.10.48298 > 10.1.8.10.http: Flags [F.], seq 74, ack 283, win 443, options [nop,nop,TS val 4216482154 ecr 3946693475], length 0
12:14:13.049774 aa:c1:ab:63:ba:68 > aa:c1:ab:38:c6:60, ethertype IPv4 (0x0800), length 66: 10.1.5.10.48298 > 10.1.8.10.http: Flags [F.], seq 74, ack 283, win 443, options [nop,nop,TS val 4216483818 ecr 3946693475], length 0
12:14:16.442594 aa:c1:ab:63:ba:68 > aa:c1:ab:38:c6:60, ethertype IPv4 (0x0800), length 66: 10.1.5.10.48298 > 10.1.8.10.http: Flags [F.], seq 74, ack 283, win 443, options [nop,nop,TS val 4216487210 ecr 3946693475], length 0
12:14:21.561909 aa:c1:ab:63:ba:68 > aa:c1:ab:38:c6:60, ethertype IPv4 (0x0800), length 66: 10.1.5.10.49374 > 10.1.8.10.http: Flags [F.], seq 0, ack 1, win 443, options [nop,nop,TS val 4216492330 ecr 3946678542], length 0
12:14:23.098124 aa:c1:ab:63:ba:68 > aa:c1:ab:38:c6:60, ethertype IPv4 (0x0800), length 66: 10.1.5.10.48298 > 10.1.8.10.http: Flags [F.], seq 74, ack 283, win 443, options [nop,nop,TS val 4216493866 ecr 3946693475], length 0
^C

而：eth2上是没有FIN  ACK包的，是被iptables丢掉了。那么server2上的tcp链接就没拆掉。
[root@server2 ~]# netstat -anp | grep 80
tcp        0      0 0.0.0.0:80              0.0.0.0:*               LISTEN      14/nginx: master pr 
tcp        0      0 10.1.8.10:80            10.1.5.10:47624         ESTABLISHED 15/nginx: worker pr 
[root@server2 ~]# 


多个没有拆掉的tcp链接：
[root@server2 ~]# netstat -anp | grep 80
tcp        0      0 0.0.0.0:80              0.0.0.0:*               LISTEN      14/nginx: master pr 
tcp        0      0 10.1.8.10:80            10.1.5.10:50624         ESTABLISHED 15/nginx: worker pr 
tcp        0      0 10.1.8.10:80            10.1.5.10:34714         ESTABLISHED 15/nginx: worker pr 
tcp        0      0 10.1.8.10:80            10.1.5.10:34730         ESTABLISHED 15/nginx: worker pr 
tcp        0      0 10.1.8.10:80            10.1.5.10:34706         ESTABLISHED 15/nginx: worker pr 
tcp        0      0 10.1.8.10:80            10.1.5.10:34728         ESTABLISHED 15/nginx: worker pr 
[root@server2 ~]# 


HTTP long chain:
Hypertext Transfer Protocol
    HTTP/1.1 200 OK\r\n
    Server: nginx/1.14.0\r\n
    Date: Tue, 07 Nov 2023 12:19:27 GMT\r\n
    Content-Type: text/html\r\n
    Content-Length: 46\r\n
    Last-Modified: Tue, 07 Nov 2023 12:18:05 GMT\r\n
    Connection: keep-alive\r\n  # HTTP Long Chain.
    ETag: "654a2afd-2e"\r\n
    Accept-Ranges: bytes\r\n
    \r\n
    [HTTP response 1/1]
    [Time since request: 0.000288000 seconds]
    [Request in frame: 8]
    [Request URI: http://10.1.8.10/]
    File Data: 46 bytes

