apiVersion: "k8s.cni.cncf.io/v1"
kind: NetworkAttachmentDefinition
metadata:
  name: macvlan-whereabouts-conf
spec:
  config: '{
      "cniVersion": "0.3.0",
      "name": "whereaboutsexample",
      "type": "macvlan",
      "master": "eth0",
      "mode": "bridge",
      "ipam": {
        "type": "whereabouts",
        "range": "15.15.1.200-15.15.1.205/24"
      }
    }'
---
apiVersion: v1
kind: Pod
metadata:
  name: vtap
  annotations:
    k8s.v1.cni.cncf.io/networks: macvlan-whereabouts-conf@eth1
  labels:
    app: vtap
spec:
  containers:
  - name: app
    image: 192.168.2.100:5000/nettool

  - name: sidecar
    image: 192.168.2.100:5000/nettool
    securityContext:
      privileged: true
    volumeMounts:
      - name: host-sys-net
        mountPath: /sys
        mountPropagation: Bidirectional
    command:
      - "sh"
      - "-c"
      - |
        # 等待主容器启动
        sleep 3

        # 获取当前 Pod 接口名（eth1 或 veth pair）
        IFACE=eth1

        tc filter del dev $IFACE egress 2>/dev/null || true
        tc filter del dev $IFACE ingress 2>/dev/null || true
        tc qdisc del dev $IFACE clsact 2>/dev/null || true

        # 1. mirror traffic to dummy interface
        # 创建 mirror0 设备用于接收镜像流量
        ip link add mirror0 type dummy
        ip link set mirror0 up

        # 添加 clsact qdisc
        tc qdisc add dev $IFACE clsact

        # ingress 方向镜像
        tc filter add dev $IFACE ingress \
            protocol ip \
            u32 match u32 0 0 \
            action mirred egress mirror dev mirror0

        # egress 方向镜像
        tc filter add dev $IFACE egress \
            protocol ip \
            u32 match u32 0 0 \
            action mirred egress mirror dev mirror0

        echo "Traffic mirroring started."

        tail -f /dev/null 

    resources:
      limits:
        memory: "1000Mi"
        cpu: "2000m"
  volumes:
  - name: host-sys-net
    hostPath:
      path: /sys
---
apiVersion: v1
kind: Pod
metadata:
  name: client
  annotations:
    k8s.v1.cni.cncf.io/networks: macvlan-whereabouts-conf@eth1
  labels:
    app: client
spec:
  containers:
  - name: client
    image: 192.168.2.100:5000/nettool
