---
# Source: cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/cilium-ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: cilium-ca
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUptSmU1Q0ZSTzNOQkYydUQyR1lYVTB3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl5TVRFeU1URXlOREl6T1ZvWERUSTFNVEV5TURFeQpOREl6T1Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF6SmpEYzRqT3Z1K2JvOUovWnZ2SGo2T3VNejJYcGZENGQ4YTdLTklKZExNNS9nd2kKcTNxdjNlNFhqNjAvWTI4aUtIT1llY0NJRE9HMWFKNWh0VW52Z2l5Q2dBNkVzWS9mUWdJUTJzSHhoZ2J2SStiTApxWDYzSkhxNkp3dmJuck93aG1Rbyt6cDJPaEQyMEJTL1dtWE12elBXUHU4d3ljRkhVTkczWklxS3V2NmY1SGZ2CnlTSGRFUEFjRGdHY0YwMy9OQVB2SGhhZERMMmlndUxMcEVtNVU1ZmwrYk96RUprdXZnY1BZb3hKcnBYL3pJcjYKdUdpaDhhVmV0MW9RUURqZTZiME50NDNMcXpzOXBsMCtPNnYrcFJaeC9ybi9HeUt0TThIWFB5UERVTEo3ekJiZQpsMjZuWmJqNWYrdU56UkQrWTRQcTVhNFIzVHIrZ1dvaTNmVlBEUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGSTRRaXBtMEVHYVIyRzY1VVliUllDV0R4OUZJTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQzZ2NlpkWG0rcEtjSEgxUTNLUjBUUGx4NithZ1N1QzEyMHZQRDFBenQxZUNtYlN1MGt0OXZhCmZLY0hhSUxKNzdVTncwRjVTMG5oeGZlay93N2ZxRjdBLzdMUFNid2NBcEJoTnZuMmFBcTFjK240WHNsN1laTkoKT09laHZKVTl6NW1vNGxMT0Y0dWVCUUJWdzgyM2xlQUtqdk1hUng2UnNVQ3VzN0RERDFFeFVUOU4rMmRvUjYxUgpPTEIxelRrd1lTUXhDOFgwNjhnN3RNZHM1TTRuQnF4Tkxnd2FlSkNhMTVaZ2FsaHZlZUN5MU1zMnFVTFV6SVFECjdKYWdhRzl5TUZPY0U0b016N3N1TllGV2xieTNxU2FyR0IwcTd2VHRXL1BHZUdlSXNNZlBFVzdqemxnVFFFbW8KRitqTExTd1lrd1orY2RPSGlWQVdCUEY1NG03dEJac0IKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBekpqRGM0ak92dStibzlKL1p2dkhqNk91TXoyWHBmRDRkOGE3S05JSmRMTTUvZ3dpCnEzcXYzZTRYajYwL1kyOGlLSE9ZZWNDSURPRzFhSjVodFVudmdpeUNnQTZFc1kvZlFnSVEyc0h4aGdidkkrYkwKcVg2M0pIcTZKd3ZibnJPd2htUW8renAyT2hEMjBCUy9XbVhNdnpQV1B1OHd5Y0ZIVU5HM1pJcUt1djZmNUhmdgp5U0hkRVBBY0RnR2NGMDMvTkFQdkhoYWRETDJpZ3VMTHBFbTVVNWZsK2JPekVKa3V2Z2NQWW94SnJwWC96SXI2CnVHaWg4YVZldDFvUVFEamU2YjBOdDQzTHF6czlwbDArTzZ2K3BSWngvcm4vR3lLdE04SFhQeVBEVUxKN3pCYmUKbDI2blpiajVmK3VOelJEK1k0UHE1YTRSM1RyK2dXb2kzZlZQRFFJREFRQUJBb0lCQUQyRFVJQlVDWlR1aFdUagp6Tm94cVBaT3gva3Y4NEE0eXZ0NERKMWhTT2FGWEZJOVk4OGF1L1dGdUIvQ2Z1UnViVjZzSXBPNGh5OFlUV3ArCjgvR0ZvVFVLSE5KVGl5RzNsL0JJbnJpbXh1Nzg5cmxja3E4TEloVWRzUW84VG5PUW91cEZBdTFGem5YMjA3NEwKL3R3Mjd6QXRiYVRPVldUVGI1V2s5L2FLa050WFdSbEhWTzFHbEVzNmw0R0t6SUZXS0ZEZ25RWElwU052czhWZQppWCtKc21ZcHFBdGdvUnREOVBJandwSEt3RUdoRjZuYVJJODUwMU1aNUsrdnYyc2lIdDhwdkdCcGlvTnRXcncwCjM2aExhWU1xUEV5RjJSdVZlalNoS3VGQWNhS1RCb2NZL2ordjJwV2dVeFh4blNnRHN2SmRqMEU5SEFUZkc2SHgKWGsyblZ3RUNnWUVBM1Vhbk9nVnNIN28wanBRWHdpbzg4dnR6SUcwUGxGbmovQmw0ZEhnQzBlOS9JNktaSi9JNwpHWERubEl1ZDlCVnd4WTVrY1E3c0l4UE02dlpscFJJVlE4dXJaR3pCWFFVSnk0R1VocmUyZTRRdTVkMTVCNjRVCkhpK1Uzb1lRMFVqM0lEZWFvcVlIcmF6VTN6elJVTXhrSlFKTEVrc2NSenIxZHM2ZTRSaW9IWWtDZ1lFQTdMUU4KYnV3elJ0TmVmZ29tWG1URTF1bkVzeXN2YlpIV3dBVEY3TVBocEk5OWY2YUE5K1F6UWdUN0NrNWtFZUNqTHhWSApGMDkvS2pKaUxGUGRxdlgrRHVOV0FiYzd0azFUMzVJSFBNMFhlZ0FkZjVIS2dmVUd5c0RpUHc3SHFCZERGam5BCjNpNks2SnJyUTl3a2ZPZE5tbXNXOFBEaXNPOTFCZmhEZ3FRU2FHVUNnWUVBMXZ4Z1dWVVBXandWK0RrV1pFV1oKZGhLc0ptTVA4ZmpzTXZHa1FMU2hPTXRTWVpNRzd2TEFUTldQaXBtajI1UkJQeEE3c2tUblZLVldRU3NvVXBzaApJZjl1QkdKTjlFeUMyY0NLUitHU1lLdHF6VmJDMHAxbFduYXNVdzg2bzd3YXJxaVhpMU40dmxyZmNBMnM2SzNNCjF0QkZrLzU1K1JMbGpvcnRmcEh3Tk5FQ2dZQWF1RUNEOHZuZTF1Rmx6UE9EMkZBNENtOS80aklhWmtvZHB1eEkKeTl2ZTNhdkhDeDZuM1FURVFSZXRsQ2ZMdE5YMjdLbjN3YXVUTWRqUE5EQmpxaDBoeFJ2aVdiTE40M0RDWGhPZgpFMi9BLzk1VWxqcUw3UUwxUkV6RjNYOUFSRS80WkZDWFJCMitJQzdLbkVFcU1Gb2NRbFoyb0ZxV3FwRkZPVDgxCnNodTUyUUtCZ1FDN1doNWZSeTFCL0I0Z0VKY1VIUE5lbEdtS1RTbngwaEVrTXYyUzFJWjBCd3NrdVBEcG5TQ3IKMlIwL2RGZDJzYnpiaFBablMrZnM4bk1sUnZlZDhJd2o5OHVicjZKV0ZGbjBmNHF3eGllZkJUN1BmSVhHZ2FOYQpoQnQ2L1Ura2w4anRXNXhFSWNRTlU0WTVMNGE3c3F1OHEyVjlURmNhMDhtbzY2Z3dJRGIzTXc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-ca-secret
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUptSmU1Q0ZSTzNOQkYydUQyR1lYVTB3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl5TVRFeU1URXlOREl6T1ZvWERUSTFNVEV5TURFeQpOREl6T1Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF6SmpEYzRqT3Z1K2JvOUovWnZ2SGo2T3VNejJYcGZENGQ4YTdLTklKZExNNS9nd2kKcTNxdjNlNFhqNjAvWTI4aUtIT1llY0NJRE9HMWFKNWh0VW52Z2l5Q2dBNkVzWS9mUWdJUTJzSHhoZ2J2SStiTApxWDYzSkhxNkp3dmJuck93aG1Rbyt6cDJPaEQyMEJTL1dtWE12elBXUHU4d3ljRkhVTkczWklxS3V2NmY1SGZ2CnlTSGRFUEFjRGdHY0YwMy9OQVB2SGhhZERMMmlndUxMcEVtNVU1ZmwrYk96RUprdXZnY1BZb3hKcnBYL3pJcjYKdUdpaDhhVmV0MW9RUURqZTZiME50NDNMcXpzOXBsMCtPNnYrcFJaeC9ybi9HeUt0TThIWFB5UERVTEo3ekJiZQpsMjZuWmJqNWYrdU56UkQrWTRQcTVhNFIzVHIrZ1dvaTNmVlBEUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGSTRRaXBtMEVHYVIyRzY1VVliUllDV0R4OUZJTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQzZ2NlpkWG0rcEtjSEgxUTNLUjBUUGx4NithZ1N1QzEyMHZQRDFBenQxZUNtYlN1MGt0OXZhCmZLY0hhSUxKNzdVTncwRjVTMG5oeGZlay93N2ZxRjdBLzdMUFNid2NBcEJoTnZuMmFBcTFjK240WHNsN1laTkoKT09laHZKVTl6NW1vNGxMT0Y0dWVCUUJWdzgyM2xlQUtqdk1hUng2UnNVQ3VzN0RERDFFeFVUOU4rMmRvUjYxUgpPTEIxelRrd1lTUXhDOFgwNjhnN3RNZHM1TTRuQnF4Tkxnd2FlSkNhMTVaZ2FsaHZlZUN5MU1zMnFVTFV6SVFECjdKYWdhRzl5TUZPY0U0b016N3N1TllGV2xieTNxU2FyR0IwcTd2VHRXL1BHZUdlSXNNZlBFVzdqemxnVFFFbW8KRitqTExTd1lrd1orY2RPSGlWQVdCUEY1NG03dEJac0IKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBekpqRGM0ak92dStibzlKL1p2dkhqNk91TXoyWHBmRDRkOGE3S05JSmRMTTUvZ3dpCnEzcXYzZTRYajYwL1kyOGlLSE9ZZWNDSURPRzFhSjVodFVudmdpeUNnQTZFc1kvZlFnSVEyc0h4aGdidkkrYkwKcVg2M0pIcTZKd3ZibnJPd2htUW8renAyT2hEMjBCUy9XbVhNdnpQV1B1OHd5Y0ZIVU5HM1pJcUt1djZmNUhmdgp5U0hkRVBBY0RnR2NGMDMvTkFQdkhoYWRETDJpZ3VMTHBFbTVVNWZsK2JPekVKa3V2Z2NQWW94SnJwWC96SXI2CnVHaWg4YVZldDFvUVFEamU2YjBOdDQzTHF6czlwbDArTzZ2K3BSWngvcm4vR3lLdE04SFhQeVBEVUxKN3pCYmUKbDI2blpiajVmK3VOelJEK1k0UHE1YTRSM1RyK2dXb2kzZlZQRFFJREFRQUJBb0lCQUQyRFVJQlVDWlR1aFdUagp6Tm94cVBaT3gva3Y4NEE0eXZ0NERKMWhTT2FGWEZJOVk4OGF1L1dGdUIvQ2Z1UnViVjZzSXBPNGh5OFlUV3ArCjgvR0ZvVFVLSE5KVGl5RzNsL0JJbnJpbXh1Nzg5cmxja3E4TEloVWRzUW84VG5PUW91cEZBdTFGem5YMjA3NEwKL3R3Mjd6QXRiYVRPVldUVGI1V2s5L2FLa050WFdSbEhWTzFHbEVzNmw0R0t6SUZXS0ZEZ25RWElwU052czhWZQppWCtKc21ZcHFBdGdvUnREOVBJandwSEt3RUdoRjZuYVJJODUwMU1aNUsrdnYyc2lIdDhwdkdCcGlvTnRXcncwCjM2aExhWU1xUEV5RjJSdVZlalNoS3VGQWNhS1RCb2NZL2ordjJwV2dVeFh4blNnRHN2SmRqMEU5SEFUZkc2SHgKWGsyblZ3RUNnWUVBM1Vhbk9nVnNIN28wanBRWHdpbzg4dnR6SUcwUGxGbmovQmw0ZEhnQzBlOS9JNktaSi9JNwpHWERubEl1ZDlCVnd4WTVrY1E3c0l4UE02dlpscFJJVlE4dXJaR3pCWFFVSnk0R1VocmUyZTRRdTVkMTVCNjRVCkhpK1Uzb1lRMFVqM0lEZWFvcVlIcmF6VTN6elJVTXhrSlFKTEVrc2NSenIxZHM2ZTRSaW9IWWtDZ1lFQTdMUU4KYnV3elJ0TmVmZ29tWG1URTF1bkVzeXN2YlpIV3dBVEY3TVBocEk5OWY2YUE5K1F6UWdUN0NrNWtFZUNqTHhWSApGMDkvS2pKaUxGUGRxdlgrRHVOV0FiYzd0azFUMzVJSFBNMFhlZ0FkZjVIS2dmVUd5c0RpUHc3SHFCZERGam5BCjNpNks2SnJyUTl3a2ZPZE5tbXNXOFBEaXNPOTFCZmhEZ3FRU2FHVUNnWUVBMXZ4Z1dWVVBXandWK0RrV1pFV1oKZGhLc0ptTVA4ZmpzTXZHa1FMU2hPTXRTWVpNRzd2TEFUTldQaXBtajI1UkJQeEE3c2tUblZLVldRU3NvVXBzaApJZjl1QkdKTjlFeUMyY0NLUitHU1lLdHF6VmJDMHAxbFduYXNVdzg2bzd3YXJxaVhpMU40dmxyZmNBMnM2SzNNCjF0QkZrLzU1K1JMbGpvcnRmcEh3Tk5FQ2dZQWF1RUNEOHZuZTF1Rmx6UE9EMkZBNENtOS80aklhWmtvZHB1eEkKeTl2ZTNhdkhDeDZuM1FURVFSZXRsQ2ZMdE5YMjdLbjN3YXVUTWRqUE5EQmpxaDBoeFJ2aVdiTE40M0RDWGhPZgpFMi9BLzk1VWxqcUw3UUwxUkV6RjNYOUFSRS80WkZDWFJCMitJQzdLbkVFcU1Gb2NRbFoyb0ZxV3FwRkZPVDgxCnNodTUyUUtCZ1FDN1doNWZSeTFCL0I0Z0VKY1VIUE5lbEdtS1RTbngwaEVrTXYyUzFJWjBCd3NrdVBEcG5TQ3IKMlIwL2RGZDJzYnpiaFBablMrZnM4bk1sUnZlZDhJd2o5OHVicjZKV0ZGbjBmNHF3eGllZkJUN1BmSVhHZ2FOYQpoQnQ2L1Ura2w4anRXNXhFSWNRTlU0WTVMNGE3c3F1OHEyVjlURmNhMDhtbzY2Z3dJRGIzTXc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUptSmU1Q0ZSTzNOQkYydUQyR1lYVTB3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl5TVRFeU1URXlOREl6T1ZvWERUSTFNVEV5TURFeQpOREl6T1Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF6SmpEYzRqT3Z1K2JvOUovWnZ2SGo2T3VNejJYcGZENGQ4YTdLTklKZExNNS9nd2kKcTNxdjNlNFhqNjAvWTI4aUtIT1llY0NJRE9HMWFKNWh0VW52Z2l5Q2dBNkVzWS9mUWdJUTJzSHhoZ2J2SStiTApxWDYzSkhxNkp3dmJuck93aG1Rbyt6cDJPaEQyMEJTL1dtWE12elBXUHU4d3ljRkhVTkczWklxS3V2NmY1SGZ2CnlTSGRFUEFjRGdHY0YwMy9OQVB2SGhhZERMMmlndUxMcEVtNVU1ZmwrYk96RUprdXZnY1BZb3hKcnBYL3pJcjYKdUdpaDhhVmV0MW9RUURqZTZiME50NDNMcXpzOXBsMCtPNnYrcFJaeC9ybi9HeUt0TThIWFB5UERVTEo3ekJiZQpsMjZuWmJqNWYrdU56UkQrWTRQcTVhNFIzVHIrZ1dvaTNmVlBEUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGSTRRaXBtMEVHYVIyRzY1VVliUllDV0R4OUZJTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQzZ2NlpkWG0rcEtjSEgxUTNLUjBUUGx4NithZ1N1QzEyMHZQRDFBenQxZUNtYlN1MGt0OXZhCmZLY0hhSUxKNzdVTncwRjVTMG5oeGZlay93N2ZxRjdBLzdMUFNid2NBcEJoTnZuMmFBcTFjK240WHNsN1laTkoKT09laHZKVTl6NW1vNGxMT0Y0dWVCUUJWdzgyM2xlQUtqdk1hUng2UnNVQ3VzN0RERDFFeFVUOU4rMmRvUjYxUgpPTEIxelRrd1lTUXhDOFgwNjhnN3RNZHM1TTRuQnF4Tkxnd2FlSkNhMTVaZ2FsaHZlZUN5MU1zMnFVTFV6SVFECjdKYWdhRzl5TUZPY0U0b016N3N1TllGV2xieTNxU2FyR0IwcTd2VHRXL1BHZUdlSXNNZlBFVzdqemxnVFFFbW8KRitqTExTd1lrd1orY2RPSGlWQVdCUEY1NG03dEJac0IKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWakNDQWo2Z0F3SUJBZ0lRSW9NWURjQUszOGhldGM2QjRSc3AvVEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nakl4TVRJeE1USTBNak01V2hjTk1qVXhNVEl3TVRJMApNak01V2pBcU1TZ3dKZ1lEVlFRRERCOHFMbVJsWm1GMWJIUXVhSFZpWW14bExXZHljR011WTJsc2FYVnRMbWx2Ck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBd2tQMlNTbm5UbC9OVGhScjJGTm4KVmtjV3FQRW1taFJGbzJ6cHd4UjlJbU5rOWRtUXlaWk43ZFg2dXRKanR0RUpLMmN5REg0V1Z1TEZzTVVXS3hqUAo1ZTlNU3Vzc05JZ3dWK25maitwYktydG1nbnlsc3o0RCtoN21SZk0wazhLOGFlOUxrQlh6SXhRNXh3ZkJRRkhJCmhjcG1SYTdJQXM4MEhKZWxPbFJac2k3eHYwU1Jzd2VFbmswOHh1Y3V5MmVLVXVFWXVCMmhNbGtERWIxYzdKYlMKWlg5OWF0Yng2SWhVRUVxZ1BONjYxSDMvS1ZOc1p0QVh3MDFGT20rSGZjTW5ESDNQY0VhbWloWGRjVjRMdzlNTwo0MVpiSzFqTE5kRmtvMzFqdzgxcXlHMGZzQVNpSUxQdlV0RjV5U2FLanNTVUQ5Z1phQ3NraStFWkFVaU13bWRSCkx3SURBUUFCbzRHTk1JR0tNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0QKQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JTT0VJcVp0QkJta2RodQp1VkdHMFdBbGc4ZlJTREFxQmdOVkhSRUVJekFoZ2g4cUxtUmxabUYxYkhRdWFIVmlZbXhsTFdkeWNHTXVZMmxzCmFYVnRMbWx2TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFBeFduVUcybVpQQmFLN2EvSm40M0JQaWZKT0FMTnoKSk5BanhtK0xvR3ZLR212UDF0cUV5bSswVlVWQm5oaTRNVjdSUi91ZnZlUmJ2eGJWbU56Y2NyRldMbExDcnY4TwowM2pLekg0S0xmUjQweURHRE5VKzRzQno1VnRaWGVDRUdpcSt2bnRCUmNCcmxBd3FYK2tlWjRiUmZMdDczMkYwCmY5S2k0NG9aVHJ1WFBRR20xZ2lTNWFoRjIrQkxUd1VrNFM2KzZ1U0syQnBERDllTzFUbWl3Q2k3Wm1aeXhjUk8KTWJVR3FOazRXbk0zanoxM3VjZEk0Tnh0bXpOQ0crclN1OGsxNy9KQTRlUUdEaHBPbE9iUi85NlJ6dW5mSm5UQQpvVk4rc3crSHZKTXA2UW92cTVzRU50ZXdjUXo4VmJpbEhSVy9jY1FiSkUxeThtclJLcit2c1E0SwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBd2tQMlNTbm5UbC9OVGhScjJGTm5Wa2NXcVBFbW1oUkZvMnpwd3hSOUltTms5ZG1RCnlaWk43ZFg2dXRKanR0RUpLMmN5REg0V1Z1TEZzTVVXS3hqUDVlOU1TdXNzTklnd1YrbmZqK3BiS3J0bWdueWwKc3o0RCtoN21SZk0wazhLOGFlOUxrQlh6SXhRNXh3ZkJRRkhJaGNwbVJhN0lBczgwSEplbE9sUlpzaTd4djBTUgpzd2VFbmswOHh1Y3V5MmVLVXVFWXVCMmhNbGtERWIxYzdKYlNaWDk5YXRieDZJaFVFRXFnUE42NjFIMy9LVk5zClp0QVh3MDFGT20rSGZjTW5ESDNQY0VhbWloWGRjVjRMdzlNTzQxWmJLMWpMTmRGa28zMWp3ODFxeUcwZnNBU2kKSUxQdlV0RjV5U2FLanNTVUQ5Z1phQ3NraStFWkFVaU13bWRSTHdJREFRQUJBb0lCQUVDQ2x3K1d0YlFHQmtSTwpiYjJwZktCZS9QeGZFRVdNUTgvUVJCUS9Bb3JmM00velRxeFNtRkJKaFhoeWt5QkxiRE1Za3JzcFI3dlVsSGR1CkN6MkdnTXRIV3R0cUd3VGEwTXJ3NUFlRGVJREpPSEpPZUN2OGhRK1RJVDdMVTROWjRIMkJOR09GbG5ib3FZTVoKWlNnNXdGQUZkVTdnaXBTOFAvN2FzTWljNkNoTjcycGVBcXhGalNhSjBFd1EvcEZ3TTJxaGcvZDV5QVRIWkVFeApLRTVsbTJST1NKNmxsSUlKbGZCTlNSUXpmUHpraUxWS1RvOUJvRlpqcitON1ZQVDgrQ1lpdlR4ejQzbjVBY2Z4Cm5lSnJmRFlCZzl1aHErVTFtZzBsNjdmdW5MV0toYjlrUHBaQnVsSzFHaU5UN3NLR01ZVmJNTi84SkpLRHliVWkKU1U4dmswRUNnWUVBK2tnTmw0L2pYZ0szT010T3p1UWZ4Z0FsYXhXcUhrVEtqbmlxTGFEYVVEVUFvSk1rS1k0bQo0YlJpOHJNVXdzak5vYnZvQW5SVGZGTUorcisweW1DRVdwZ29xN29MWWlCT0g3blU0Qy9CUktSZXBDa2ZINngvCkZQVHFMcE5LNFlBM0wvUkkzMmJ4TGI2RDJmOXRvL1BPVHl5RjJZRWM3WXFNLzNTZU9QWitieUVDZ1lFQXhyUkMKbVRyTFRKejhlVlV0NzAxVzdtUFRYN1JKZWVNbkw5d0FoY3VJRWpxN3RzY3VQd01EM3lVME9rRVpJZHZqcmlMUgpZOG5hMkpVMTNiRkNzUGlSb2ZjRmtkTGxqT3dvRldsTGZKUWN1T2JDYmdGWlBHbDJGR2tqUzV5VjBmYmd4TEYyCjRGUFJkQVVxUGgweE9XK0NmQW5pVWpjeWZGUStCSk9xR1Q4QVJrOENnWUVBaUhGZmQ1RHAwd2FIL0Y1WnlGQjEKUWV3eWVmNkZqNXJSRW5xVnkrbzFHaVRMQXI4MHA3TG5YNFNIck9nVUdWeC9QZnpDcnhQYnI1dFZoVzJka2ZhcwpNUGRpdEx2b0dNYWowSWZ1bFlselE0aVlUOFpiUVZrNHJxUVdSdTNsbEtuaGJETXd4eG5Id2JockNSMUhHR3FCCnZvZjNNR3hDNlB6dmdSU0NiV3R6NGdFQ2dZRUFwZUluRnpUMk0rZDYvdkFWZ1FuWDRQeUZvZ2dvcnhEcnpoQ2sKZnc0RGN2U0ZjWG1uS2dPaVg4LzNZZ3FtcUpXaDVlWTdXRXRUNEN2dzVEcnZxajVabGhWYkdQb3ZtUTR1Q0hIMwpDdkc3YU1GODM4bFFiaGE4OVIwdzBoYlBISkkxNHY4a2R2S0NrWkVlU3V5a0E0Y01ML0V3ZCtLTXl5Nm85N2t1CjhCU2diaEVDZ1lBeXlUcVpOQ2V0WG9aNHNKZWZ4eTljZ2E1emVIZEVrSnJMaFR1WUlFbDZxTkRIaDloQ2RTTDkKaEt5aHg4dUw0eWFmajJnUmZMWERxRm5Wa2tCV1R2VlltK2FSc3RXTThIR0RaQ1ZQSWdYRVBQb0daSTFXa0V2agp0QzVIYzhmYWRKNG82SGNOdWhCeW9RNEd5Q0lmOEh5U0FFZTgzM2JYN0FjNTRmTUN1cWd4Unc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
data:

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  cilium-endpoint-gc-interval: "5m0s"
  nodes-gc-interval: "5m0s"
  # Disable the usage of CiliumEndpoint CRD
  disable-endpoint-crd: "false"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/policy/intro/#policy-enforcement-modes
  enable-policy: "default"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "true"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: 5s

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0) of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  # bpf-lb-bypass-fib-lookup instructs Cilium to enable the FIB lookup bypass
  # optimization for nodeport reverse NAT handling.
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: default
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: "0"

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  tunnel: "disabled"
  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv6-masquerade: "true"
  enable-bpf-masquerade: "true"

  enable-xt-socket-fallback: "true"
  install-iptables-rules: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "true"
  enable-local-redirect-policy: "false"
  ipv4-native-routing-cidr: 10.0.0.0/8

  kube-proxy-replacement: "strict"
  kube-proxy-replacement-healthz-bind-address: ""
  bpf-lb-sock: "false"
  enable-health-check-nodeport: "true"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  bpf-lb-mode: "dsr"
  enable-svc-source-range-check: "true"
  enable-l2-neigh-discovery: "true"
  arping-refresh-period: "30s"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  synchronize-k8s-nodes: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path: "/var/run/cilium/hubble.sock"
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "kubernetes"
  disable-cnp-status-updates: "true"
  enable-vtep: "false"
  vtep-endpoint: ""
  vtep-cidr: ""
  vtep-mask: ""
  vtep-mac: ""
  enable-bgp-control-plane: "false"
  procfs: "/host/proc"
  bpf-root: "/sys/fs/bpf"
  cgroup-root: "/run/cilium/cgroupv2"
  enable-k8s-terminating-endpoint: "true"
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  unmanaged-pod-watcher-interval: "15"
  tofqdns-dns-reject-response-code: "refused"
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: "0s"
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: "100ms"
  agent-not-ready-taint-key: "node.cilium.io/agent-not-ready"
---
# Source: cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumbgploadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumegressnatpolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  # To synchronize garbage collection of such resources
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
# Source: cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # To remove node taints
  - nodes
  # To set NetworkUnavailable false on startup
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
- apiGroups:
  - ""
  resources:
  # to check apiserver connectivity
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'
  - create
  - update
  - deletecollection
  # To update the status of the CNPs and CCNPs
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  # Update the auto-generated CNPs and CCNPs status.
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  # To perform garbage collection of such resources
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  # To synchronize garbage collection of such resources
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
    # To perform CiliumNode garbage collector
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
  resourceNames:
  - ciliumbgploadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumegressnatpolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/hubble/peer-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-peer
  namespace: kube-system
  labels:
    k8s-app: cilium
spec:
  selector:
    k8s-app: cilium
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  internalTrafficPolicy: Local
---
# Source: cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: kube-system
  labels:
    k8s-app: cilium
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # Set app AppArmor's profile to "unconfined". The value of this annotation
        # can be modified as long users know which profiles they have available
        # in AppArmor.
        container.apparmor.security.beta.kubernetes.io/cilium-agent: "unconfined"
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: "unconfined"
        container.apparmor.security.beta.kubernetes.io/mount-cgroup: "unconfined"
        container.apparmor.security.beta.kubernetes.io/apply-sysctl-overwrites: "unconfined"
      labels:
        k8s-app: cilium
    spec:
      containers:
      - name: cilium-agent
        image: "quay.io/cilium/cilium:v1.12.0@sha256:079baa4fa1b9fe638f96084f4e0297c84dd4fb215d29d2321dcbe54273f63ade"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-agent
        args:
        - --config-dir=/tmp/cilium/config-map
        startupProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cni-chaining-mode
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: custom-cni-conf
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "192.168.2.71"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        lifecycle:
          postStart:
            exec:
              command:
              - "/cni-install.sh"
              - "--enable-debug=false"
              - "--cni-exclusive=true"
              - "--log-file=/var/run/cilium/cilium-cni.log"
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        securityContext:
          seLinuxOptions:
            level: 's0'
            # Running with spc_t since we have removed the privileged mode.
            # Users can change it to a different type as long as they have the
            # type available on the system.
            type: 'spc_t'
          capabilities:
            add:
              # Use to set socket permission
              - CHOWN
              # Used to terminate envoy child process
              - KILL
              # Used since cilium modifies routing tables, etc...
              - NET_ADMIN
              # Used since cilium creates raw sockets, etc...
              - NET_RAW
              # Used since cilium monitor uses mmap
              - IPC_LOCK
              # Used in iptables. Consider removing once we are iptables-free
              - SYS_MODULE
              # We need it for now but might not need it for >= 5.11 specially
              # for the 'SYS_RESOURCE'.
              # In >= 5.8 there's already BPF and PERMON capabilities
              - SYS_ADMIN
              # Could be an alternative for the SYS_ADMIN for the RLIMIT_NPROC
              - SYS_RESOURCE
              # Both PERFMON and BPF requires kernel 5.8, container runtime
              # cri-o >= v1.22.0 or containerd >= v1.5.0.
              # If available, SYS_ADMIN can be removed.
              #- PERFMON
              #- BPF
              - DAC_OVERRIDE
              - FOWNER
              - SETGID
              - SETUID
            drop:
              - ALL
        volumeMounts:
        # Unprivileged containers need to mount /proc/sys/net from the host
        # to have write access
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        # Unprivileged containers need to mount /proc/sys/kernel from the host
        # to have write access
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Unprivileged containers can't set mount propagation to bidirectional
          # in this case we will mount the bpf fs from an init container that
          # is privileged and set the mount propagation from host to container
          # in Cilium.
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        - name: cni-path
          mountPath: /host/opt/cni/bin
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: clustermesh-secrets
          mountPath: /var/lib/cilium/clustermesh
          readOnly: true
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
          # Needed to be able to load kernel modules
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: xtables-lock
          mountPath: /run/xtables.lock
        - name: hubble-tls
          mountPath: /var/lib/cilium/tls/hubble
          readOnly: true
      initContainers:
      # Required to mount cgroup2 filesystem on the underlying Kubernetes node.
      # We use nsenter command with host's cgroup and mount namespaces enabled.
      - name: mount-cgroup
        image: "quay.io/cilium/cilium:v1.12.0@sha256:079baa4fa1b9fe638f96084f4e0297c84dd4fb215d29d2321dcbe54273f63ade"
        imagePullPolicy: IfNotPresent
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh and mount that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        securityContext:
          seLinuxOptions:
            level: 's0'
            # Running with spc_t since we have removed the privileged mode.
            # Users can change it to a different type as long as they have the
            # type available on the system.
            type: 'spc_t'
          capabilities:
            drop:
              - ALL
            add:
              # Only used for 'mount' cgroup
              - SYS_ADMIN
              # Used for nsenter
              - SYS_CHROOT
              - SYS_PTRACE
      - name: apply-sysctl-overwrites
        image: "quay.io/cilium/cilium:v1.12.0@sha256:079baa4fa1b9fe638f96084f4e0297c84dd4fb215d29d2321dcbe54273f63ade"
        imagePullPolicy: IfNotPresent
        env:
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
          nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
          rm /hostbin/cilium-sysctlfix
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        securityContext:
          seLinuxOptions:
            level: 's0'
            # Running with spc_t since we have removed the privileged mode.
            # Users can change it to a different type as long as they have the
            # type available on the system.
            type: 'spc_t'
          capabilities:
            drop:
              - ALL
            add:
              # Required in order to access host's /etc/sysctl.d dir
              - SYS_ADMIN
              # Used for nsenter
              - SYS_CHROOT
              - SYS_PTRACE
      # Mount the bpf fs if it is not mounted. We will perform this task
      # from a privileged container because the mount propagation bidirectional
      # only works from privileged containers.
      - name: mount-bpf-fs
        image: "quay.io/cilium/cilium:v1.12.0@sha256:079baa4fa1b9fe638f96084f4e0297c84dd4fb215d29d2321dcbe54273f63ade"
        imagePullPolicy: IfNotPresent
        args:
        - 'mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf'
        command:
        - /bin/bash
        - -c
        - --
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
      - name: clean-cilium-state
        image: "quay.io/cilium/cilium:v1.12.0@sha256:079baa4fa1b9fe638f96084f4e0297c84dd4fb215d29d2321dcbe54273f63ade"
        imagePullPolicy: IfNotPresent
        command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-state
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-bpf-state
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "192.168.2.71"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        securityContext:
          seLinuxOptions:
            level: 's0'
            # Running with spc_t since we have removed the privileged mode.
            # Users can change it to a different type as long as they have the
            # type available on the system.
            type: 'spc_t'
          capabilities:
            # Most of the capabilities here are the same ones used in the
            # cilium-agent's container because this container can be used to
            # uninstall all Cilium resources, and therefore it is likely that
            # will need the same capabilities.
            add:
              # Used since cilium modifies routing tables, etc...
              - NET_ADMIN
              # Used in iptables. Consider removing once we are iptables-free
              - SYS_MODULE
              # We need it for now but might not need it for >= 5.11 specially
              # for the 'SYS_RESOURCE'.
              # In >= 5.8 there's already BPF and PERMON capabilities
              - SYS_ADMIN
              # Could be an alternative for the SYS_ADMIN for the RLIMIT_NPROC
              - SYS_RESOURCE
              # Both PERFMON and BPF requires kernel 5.8, container runtime
              # cri-o >= v1.22.0 or containerd >= v1.5.0.
              # If available, SYS_ADMIN can be removed.
              #- PERFMON
              #- BPF
            drop:
              - ALL
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Required to mount cgroup filesystem from the host to cilium agent pod
        - name: cilium-cgroup
          mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        resources:
          requests:
            cpu: 100m
            memory: 100Mi # wait-for-kube-proxy
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      terminationGracePeriodSeconds: 1
      hostNetwork: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # To keep state between restarts / upgrades
      - name: cilium-run
        hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        # To keep state between restarts / upgrades for bpf maps
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      # To mount cgroup2 filesystem on the host
      - name: hostproc
        hostPath:
          path: /proc
          type: Directory
      # To keep state between restarts / upgrades for cgroup2 filesystem
      - name: cilium-cgroup
        hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
      # To install cilium cni plugin in the host
      - name: cni-path
        hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        # To install cilium cni configuration in the host
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        # To be able to load kernel modules
      - name: lib-modules
        hostPath:
          path: /lib/modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        secret:
          secretName: cilium-clustermesh
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          optional: true
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
      - name: host-proc-sys-net
        hostPath:
          path: /proc/sys/net
          type: Directory
      - name: host-proc-sys-kernel
        hostPath:
          path: /proc/sys/kernel
          type: Directory
      - name: hubble-tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-server-certs
              optional: true
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
---
# Source: cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: kube-system
  labels:
    io.cilium/app: operator
    name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        io.cilium/app: operator
        name: cilium-operator
    spec:
      containers:
      - name: cilium-operator
        image: quay.io/cilium/operator-generic:v1.12.0@sha256:bb2a42eda766e5d4a87ee8a5433f089db81b72dd04acf6b59fcbb445a95f9410
        imagePullPolicy: IfNotPresent
        command:
        - cilium-operator-generic
        args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "192.168.2.71"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        volumeMounts:
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
